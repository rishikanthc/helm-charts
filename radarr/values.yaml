image:
  repository: ghcr.io/onedr0p/radarr
  tag: 4.7.5.7809

controller:
  type: statefulset
  strategy: RollingUpdate

ingress:
  main:
    enabled: true
    ingressClassName: traefik
    hosts:
      - host: rrr.rkth.io
        paths:
          - path: /
            pathType: Prefix

    tls:
      - secretName: radarr-tls

service:
  main:
    ports:
      http:
        protocol: TCP
        port: 7878
        targetPort: 7878

podSecurityContext:
  runAsUser: 568
  fsGroup: 568
  runAsGroup: 568
  fsGroupChangePolicy: "OnRootMismatch"
  supplementalGroups:
    - 100

env:
  TZ: America/Los_Angeles
  DOCKER_MODS: ghcr.io/gilbn/theme.park:radarr
  TP_THEME: nord
  RADARR__APPLICATION_URL: https://rrr.rkth.io
  RADARR__POSTGRES_MAIN_DB: radarr
  RADARR__POSTGRES_LOG_DB: radarr-log
  RADARR__POSTGRES_HOST: radarr-db-postgresql.appspace.svc.cluster.local
  RADARR__POSTGRES_USER:
    valueFrom:
      secretKeyRef:
        name: radarr-secret
        key: username
  RADARR__POSTGRES_PASSWORD:
    valueFrom:
      secretKeyRef:
        name: radarr-secret
        key: password

resources:
  requests:
    cpu: 10m
    memory: 256Mi
  limits:
    memory: 2Gi

persistence:
  config:
    enabled: true
    storageClass: longhorn
    accessMode: ReadWriteOnce
    size: 24Mi
    retain: true
    mountPath: /config
  media:
    enabled: true
    type: nfs
    server: 207.246.100.141
    path: /mnt/blockstorage/skidobo/media-stack
    mountPath: /media
    accessMode: ReadWriteMany
    retain: true

probes:
  liveness:
    enabled: true
    custom: true
    spec:
      httpGet:
        path: /ping
        port: http
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
  readiness:
    enabled: true
    custom: true
    spec:
      httpGet:
        path: /ping
        port: http
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
  startup:
    enabled: false


postgresql-ha:
  nameOverride: radarr-db
  fullnameOverride: radarr-db

  global:
    storageClass: "longhorn"

  postgresql:
    username: radarr
    database: radarr
    existingSecret: radarr-secret

  persistence:
    enabled: true
    size: 1Gi
