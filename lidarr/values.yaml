image:
  repository: ghcr.io/onedr0p/lidarr
  tag: 1.3.5.3530

controller:
  type: statefulset
  strategy: RollingUpdate

ingress:
  main:
    enabled: true
    ingressClassName: traefik
    hosts:
      - host: lrr.rkth.io
        paths:
          - path: /
            pathType: Prefix

    tls:
      - secretName: lidarr-tls

service:
  main:
    ports:
      http:
        protocol: TCP
        port: 8686
        targetPort: 8686

persistence:
  config:
    enabled: true
    storageClass: longhorn
    accessMode: ReadWriteOnce
    size: 24Mi
    retain: true
    mountPath: /config

podSecurityContext:
  runAsUser: 568
  fsGroup: 568
  runAsGroup: 568
  fsGroupChangePolicy: "OnRootMismatch"
  supplementalGroups:
    - 100

env:
  TZ: America/Los_Angeles
  PROWLARR__LOG_LEVEL: debug
  PROWLARR__POSTGRES_MAIN_DB: lidarr
  PROWLARR__POSTGRES_LOG_DB: lidarr_log
  PROWLARR__POSTGRES_HOST: lidarr-db.appspace.svc.cluster.local
  PROWLARR__POSTGRES_USER:
    valueFrom:
      secretKeyRef:
        name: lidarr-secret
        key: username
  PROWLARR__POSTGRES_PASSWORD:
    valueFrom:
      secretKeyRef:
        name: lidarr-secret
        key: user-password

resources:
  requests:
    cpu: 0.5
    memory: 512Mi
  limits:
    memory: 1Gi
    cpu: 1

initContainers:
  init-db:
    image: ghcr.io/onedr0p/postgres-init:14.9
    imagePullPolicy: IfNotPresent
    envFrom:
      - secretRef:
          name: lidarr-init-secret


postgresql:
  nameOverride: lidarr-db
  fullnameOverride: lidarr-db
  global:
    storageClass: longhorn

    postgresql:
      auth:
        username: lidarr
        database: lidarr
        existingSecret: lidarr-secret

        secretKeys:
          adminPasswordKey: admin-password
          userPasswordKey: user-password
          replicationPasswordKey: replication-password
  primary:
    persistence:
      storageClass: longhorn
      size: 1Gi
