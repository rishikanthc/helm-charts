image:
  repository: ghcr.io/onedr0p/sonarr
  tag: 3.0.10.1567


ingress:
  main:
    enabled: false
    ingressClassName: traefik
    hosts:
      - host: ""
        paths:
          - path: /
            pathType: Prefix

    tls:
      - secretName: sonarr-tls

service:
  main:
    ports:
      http:
        protocol: TCP
        port: 8989
        targetPort: 8989

podSecurityContext:
  runAsUser: 568
  fsGroup: 568
  runAsGroup: 568
  fsGroupChangePolicy: "OnRootMismatch"
  supplementalGroups:
    - 100

env:
  TZ: America/Los_Angeles
  SONARR__POSTGRES_HOST: sonarr-db.default.svc.cluster.local
  SONARR__POSTGRES_MAIN_DB: sonarr
  SONARR__POSTGRES_LOG_DB: sonarr_log
  SONARR__POSTGRES_USER:
    valueFrom:
      secretKeyRef:
        name: sonarr-secret
        key: username
  SONARR__POSTGRES_PASSWORD:
    valueFrom:
      secretKeyRef:
        name: sonarr-secret
        key: user-password

persistence:
  config:
    enabled: true
    type: nfs
    server: 207.246.100.141
    path: /mnt/blockstorage/skidobo/media-stack/configs/sonarr
    retain: true
    mountPath: /config
  media:
    enabled: true
    type: nfs
    server: 207.246.100.141
    path: /mnt/blockstorage/skidobo/media-stack
    mountPath: /media
    accessMode: ReadWriteMany
    retain: true

resources:
  requests:
    cpu: 1
    memory: 1Gi
  limits:
    cpu: 2
    memory: 2Gi

initContainers:
  init-db:
    image: ghcr.io/onedr0p/postgres-init:14.9
    envFrom:
      - secretRef:
          name: sonarr-init-secret

postgresql:
  nameOverride: sonarr-db
  fullnameOverride: sonarr-db
  global:
    storageClass: longhorn

    postgresql:
      auth:
        username: sonarr
        database: sonarr
        existingSecret: sonarr-secret

        secretKeys:
          adminPasswordKey: admin-password
          userPasswordKey: user-password
          replicationPasswordKey: replication-password

  primary:
    persistence:
      storageClass: longhorn
